{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monoster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","e","console","log","this","target","value","filterMonosters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAEC,GAAF,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,eACvB,6BAAKL,EAAMI,SAASE,OACpB,6BAAKN,EAAMI,SAASG,QACpB,0BCLKC,EAAW,SAAER,GAAF,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAK,SAAAN,GAAQ,OACzB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCFnBM,G,MAAY,SAAC,GAAD,IAAIC,EAAJ,EAAIA,YAAaC,EAAjB,EAAiBA,aAAjB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCHG,E,kDAvCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,0BAE1C,SAAcE,GAAI,IAAD,OACfC,QAAQC,IAAIC,MACZA,KAAKJ,SAAS,CAACN,YAAaO,EAAEI,OAAOC,QAAQ,WAC3CJ,QAAQC,IAAI,EAAKV,Y,oBAGrB,WAAU,IAAD,SAC4BW,KAAKX,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACba,EAAkBtB,EAASuB,QAAO,SAAA5B,GAAQ,OAC9CA,EAASE,KAAK2B,cAAcC,SAAShB,EAAYe,kBAGrD,OADEP,QAAQC,IAAII,GAEZ,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWW,YAAY,kBACvBC,aAAc,SAACY,GAAD,OAAO,EAAKZ,aAAaY,MACvC,cAAC,EAAD,CAAUhB,SAAUsB,W,GAhCRI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.199b855d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = ( props ) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monoster\" src={`https://robohash.org/${props.monoster.id}?set=set2`} />\r\n        <h1>{props.monoster.name}</h1>\r\n        <h2>{props.monoster.email}</h2>\r\n        <p></p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component'\r\nexport const CardList = ( props ) => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map( monoster => (\r\n            <Card key={monoster.id} monoster={monoster}></Card>\r\n        ) )}\r\n    </div>\r\n\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ( { placeholder, handleChange } ) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n)\r\n","import './App.css';\nimport { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    } ;\n\n   // this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n  handleChange (e) {\n    console.log(this);\n    this.setState({searchField: e.target.value}, () => {\n      console.log(this.state)\n    }) ;\n  }\n  render() {\n    const  { monsters, searchField } = this.state;\n    const filterMonosters = monsters.filter(monoster => (\n      monoster.name.toLowerCase().includes(searchField.toLowerCase())\n    ));\n    console.log(filterMonosters);\n  return (\n    <div className=\"App\">\n      <h1>Monosters Rolodex</h1>\n      <SearchBox placeholder='search monoster' \n      handleChange={(e) => this.handleChange(e) } />\n      <CardList monsters={filterMonosters}>\n      </CardList>\n      \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}